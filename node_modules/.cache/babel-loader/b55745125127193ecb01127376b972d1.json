{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/pagina1-acadedmy/src/components/TaskList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FiCheckSquare, FiTrash } from \"react-icons/fi\";\nimport { Container, Header, Content, Task } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskList() {\n  _s();\n\n  const [tasks, setTasks] = useState(() => {\n    const storagedTasks = localStorage.getItem('@todo:task');\n\n    if (storagedTasks) {\n      const tasksList = JSON.parse(storagedTasks);\n      return tasksList;\n    }\n\n    return [];\n  });\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  function handleCreateNewItem() {\n    if (!newTaskTitle) {\n      return;\n    }\n\n    const task = {\n      id: Math.random(),\n      title: newTaskTitle,\n      isComplete: false\n    };\n    setNewTaskTitle('');\n    setTasks([...tasks, task]);\n    localStorage.setItem('@todo:task', JSON.stringify(...tasks, task));\n  }\n\n  function handleToggleTaskCompletion(id) {\n    const updatedTasks = tasks.map(tasks => {\n      const updatedTasks = tasks;\n\n      if (updatedTasks.id == id) {\n        updatedTasks.isComplete = !updatedTasks.isComplete;\n        return updatedTasks;\n      }\n\n      return tasks;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function handleRemoveTask(id) {\n    const updatedTask = tasks.filter(tasks => tasks.id != id);\n    setTasks(updatedTask);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Minha List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicionar novo item\",\n          value: newTaskTitle,\n          onChange: event => setNewTaskTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleCreateNewItem,\n          children: /*#__PURE__*/_jsxDEV(FiCheckSquare, {\n            size: 16,\n            color: \"#FFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(tasks => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Task, {\n            isComplete: tasks.isComplete,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: tasks.isComplete,\n              onClick: () => handleToggleTaskCompletion(tasks.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tasks.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveTask(tasks.id),\n            children: /*#__PURE__*/_jsxDEV(FiTrash, {\n              size: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this)]\n        }, tasks.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }, this);\n}\n\n_s(TaskList, \"Pq6+QGBiCDtwnMleJQcFyELIw0w=\");\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/home/marcelo/pagina1-acadedmy/src/components/TaskList/index.tsx"],"names":["useState","FiCheckSquare","FiTrash","Container","Header","Content","Task","TaskList","tasks","setTasks","storagedTasks","localStorage","getItem","tasksList","JSON","parse","newTaskTitle","setNewTaskTitle","handleCreateNewItem","task","id","Math","random","title","isComplete","setItem","stringify","handleToggleTaskCompletion","updatedTasks","map","handleRemoveTask","updatedTask","filter","event","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { FiCheckSquare, FiTrash } from \"react-icons/fi\"\n\n\nimport { Container, Header, Content, Task } from \"./styles\";\n\ninterface TaskItem {\n  id: number;\n  title: string;\n  isComplete: boolean;\n}\n\n export function TaskList(){\n  const[tasks, setTasks] = useState<TaskItem[]>(() => {\n    const storagedTasks = localStorage.getItem('@todo:task');\n    if(storagedTasks){\n      const tasksList = JSON.parse(storagedTasks);\n      return tasksList;\n    }\n    return[];\n  });\n  const[newTaskTitle, setNewTaskTitle] = useState('');\n\n  function handleCreateNewItem(){\n    if(!newTaskTitle){\n      return;\n    }\n    const task = {\n      id: Math.random(),\n      title: newTaskTitle,\n      isComplete: false,\n    }\n    setNewTaskTitle('');\n    setTasks([...tasks, task]);\n\n    localStorage.setItem('@todo:task', JSON.stringify(...tasks, task))\n  }\n\n  function handleToggleTaskCompletion(id: number){\n    const updatedTasks = tasks.map(tasks => {\n      const updatedTasks = tasks;\n\n      if(updatedTasks.id == id){\n        updatedTasks.isComplete = !updatedTasks.isComplete;\n        return updatedTasks\n      }\n      return tasks;\n    });\n\n    setTasks(updatedTasks);\n  }\n\n  function handleRemoveTask(id: number){\n    const updatedTask = tasks.filter(tasks => tasks.id != id);\n    setTasks(updatedTask);\n  }\n\n   return(\n     <Container>\n       <Header>\n         <h2>Minha List</h2>\n\n         <div>\n            <input \n              type=\"text\"\n              placeholder=\"Adicionar novo item\"\n              value={newTaskTitle}\n              onChange={event => setNewTaskTitle(event.target.value)}\n            />\n            <button type=\"submit\" onClick={handleCreateNewItem}>\n              <FiCheckSquare size={16} color=\"#FFF\" />\n            </button>\n         </div>\n       </Header>\n       <Content>\n         <ul>\n           {tasks.map(tasks =>(\n             <li key={tasks.id}>\n             <Task isComplete={tasks.isComplete}>\n                <input \n                  type=\"checkbox\"\n                  checked={tasks.isComplete} \n                  onClick={() => handleToggleTaskCompletion(tasks.id)}\n                />\n                <p>{tasks.title}</p>\n             </Task>\n             <button type=\"button\" onClick={() => handleRemoveTask(tasks.id)}>\n               <FiTrash size=\"16\" />\n             </button>\n           </li>\n           ))}\n         </ul>\n       </Content>\n     </Container>\n   );\n }"]},"metadata":{},"sourceType":"module"}