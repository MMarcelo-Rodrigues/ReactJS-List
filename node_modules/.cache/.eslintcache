[{"/home/marcelo/pagina1-acadedmy/src/index.tsx":"1","/home/marcelo/pagina1-acadedmy/src/App.tsx":"2","/home/marcelo/pagina1-acadedmy/src/styles/global.ts":"3","/home/marcelo/pagina1-acadedmy/src/components/Header/index.tsx":"4","/home/marcelo/pagina1-acadedmy/src/components/Header/styles.ts":"5","/home/marcelo/pagina1-acadedmy/src/components/TaskList/index.tsx":"6","/home/marcelo/pagina1-acadedmy/src/components/TaskList/styles.ts":"7","/home/marcelo/ProjetoLista-acadedmy/src/index.tsx":"8","/home/marcelo/ProjetoLista-acadedmy/src/App.tsx":"9","/home/marcelo/ProjetoLista-acadedmy/src/styles/global.ts":"10","/home/marcelo/ProjetoLista-acadedmy/src/components/Header/index.tsx":"11","/home/marcelo/ProjetoLista-acadedmy/src/components/TaskList/index.tsx":"12","/home/marcelo/ProjetoLista-acadedmy/src/components/Header/styles.ts":"13","/home/marcelo/ProjetoLista-acadedmy/src/components/TaskList/styles.ts":"14"},{"size":202,"mtime":1630163227294,"results":"15","hashOfConfig":"16"},{"size":261,"mtime":1630210955790,"results":"17","hashOfConfig":"16"},{"size":597,"mtime":1630210958114,"results":"18","hashOfConfig":"16"},{"size":186,"mtime":1630210961874,"results":"19","hashOfConfig":"16"},{"size":450,"mtime":1630210965894,"results":"20","hashOfConfig":"16"},{"size":2436,"mtime":1630210970093,"results":"21","hashOfConfig":"16"},{"size":2216,"mtime":1630210973653,"results":"22","hashOfConfig":"16"},{"size":202,"mtime":1630163227294,"results":"23","hashOfConfig":"24"},{"size":261,"mtime":1630210955790,"results":"25","hashOfConfig":"24"},{"size":597,"mtime":1630210958114,"results":"26","hashOfConfig":"24"},{"size":186,"mtime":1630210961874,"results":"27","hashOfConfig":"24"},{"size":2436,"mtime":1630210970093,"results":"28","hashOfConfig":"24"},{"size":450,"mtime":1630210965894,"results":"29","hashOfConfig":"24"},{"size":2216,"mtime":1630210973653,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"ddz209",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3t69ht",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marcelo/pagina1-acadedmy/src/index.tsx",[],["61","62"],"/home/marcelo/pagina1-acadedmy/src/App.tsx",[],"/home/marcelo/pagina1-acadedmy/src/styles/global.ts",[],"/home/marcelo/pagina1-acadedmy/src/components/Header/index.tsx",[],"/home/marcelo/pagina1-acadedmy/src/components/Header/styles.ts",[],"/home/marcelo/pagina1-acadedmy/src/components/TaskList/index.tsx",["63","64"],"/home/marcelo/pagina1-acadedmy/src/components/TaskList/styles.ts",[],"/home/marcelo/ProjetoLista-acadedmy/src/index.tsx",[],"/home/marcelo/ProjetoLista-acadedmy/src/App.tsx",[],"/home/marcelo/ProjetoLista-acadedmy/src/styles/global.ts",[],"/home/marcelo/ProjetoLista-acadedmy/src/components/Header/index.tsx",[],"/home/marcelo/ProjetoLista-acadedmy/src/components/TaskList/index.tsx",["65","66"],"import { useState } from \"react\";\nimport { FiCheckSquare, FiTrash } from \"react-icons/fi\"\n\n\nimport { Container, Header, Content, Task } from \"./styles\";\n\ninterface TaskItem {\n  id: number;\n  title: string;\n  isComplete: boolean;\n}\n\n export function TaskList(){\n  const[tasks, setTasks] = useState<TaskItem[]>(() => {\n    const storagedTasks = localStorage.getItem('@todo:task');\n    if(storagedTasks){\n      const tasksList = JSON.parse(storagedTasks);\n      return tasksList;\n    }\n    return[];\n  });\n  const[newTaskTitle, setNewTaskTitle] = useState('');\n\n  function handleCreateNewItem(){\n    if(!newTaskTitle){\n      return;\n    }\n    const task = {\n      id: Math.random(),\n      title: newTaskTitle,\n      isComplete: false,\n    }\n    setNewTaskTitle('');\n    setTasks([...tasks, task]);\n\n    localStorage.setItem('@todo:task', JSON.stringify([...tasks, task]))\n  }\n\n  function handleToggleTaskCompletion(id: number){\n    const updatedTasks = tasks.map(tasks => {\n      const updatedTasks = tasks;\n\n      if(updatedTasks.id == id){\n        updatedTasks.isComplete = !updatedTasks.isComplete;\n        return updatedTasks\n      }\n      return tasks;\n    });\n\n    setTasks(updatedTasks);\n  }\n\n  function handleRemoveTask(id: number){\n    const updatedTask = tasks.filter(tasks => tasks.id != id);\n    setTasks(updatedTask);\n  }\n\n   return(\n     <Container>\n       <Header>\n         <h2>My List</h2>\n\n         <div>\n            <input \n              type=\"text\"\n              placeholder=\"Adicionar novo item\"\n              value={newTaskTitle}\n              onChange={event => setNewTaskTitle(event.target.value)}\n            />\n            <button type=\"submit\" onClick={handleCreateNewItem}>\n              <FiCheckSquare size={16} color=\"#FFF\" />\n            </button>\n         </div>\n       </Header>\n       <Content>\n         <ul>\n           {tasks.map(tasks =>(\n             <li key={tasks.id}>\n             <Task isComplete={tasks.isComplete}>\n                <input \n                  type=\"checkbox\"\n                  checked={tasks.isComplete} \n                  onClick={() => handleToggleTaskCompletion(tasks.id)}\n                />\n                <p>{tasks.title}</p>\n             </Task>\n             <button type=\"button\" onClick={() => handleRemoveTask(tasks.id)}>\n               <FiTrash size=\"16\" />\n             </button>\n           </li>\n           ))}\n         </ul>\n       </Content>\n     </Container>\n   );\n }","/home/marcelo/ProjetoLista-acadedmy/src/components/Header/styles.ts",[],"/home/marcelo/ProjetoLista-acadedmy/src/components/TaskList/styles.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":43,"column":26,"nodeType":"73","messageId":"74","endLine":43,"endColumn":28},{"ruleId":"71","severity":1,"message":"75","line":54,"column":56,"nodeType":"73","messageId":"74","endLine":54,"endColumn":58},{"ruleId":"71","severity":1,"message":"72","line":43,"column":26,"nodeType":"73","messageId":"74","endLine":43,"endColumn":28},{"ruleId":"71","severity":1,"message":"75","line":54,"column":56,"nodeType":"73","messageId":"74","endLine":54,"endColumn":58},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]